/* Cyberpunk Terminal Theme - Component Styles */
/* Colors are defined in theme.css for light/dark mode support */

:root {
  /* Fonts */
  --terminal-font: 'JetBrains Mono', 'Fira Code', 'Cascadia Code', monospace;
}

/* Terminal Window Component Styles */
.terminal-window {
  background: var(--terminal-bg);
  border: 1px solid var(--terminal-green);
  border-radius: 4px;
  box-shadow: inset 0 0 10px rgba(0, 255, 0, 0.05);
  font-family: var(--terminal-font);
  position: relative;
  overflow: hidden;
  margin: 0.5rem; /* Add margin for spacing between cards */
}

.terminal-window::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 2px,
    rgba(0, 255, 0, 0.03) 2px,
    rgba(0, 255, 0, 0.03) 4px
  );
  pointer-events: none;
  animation: scanlines 8s linear infinite;
}

.terminal-header {
  background: linear-gradient(to bottom, #1a1a1a, #0f0f0f);
  border-bottom: 1px solid var(--terminal-green);
  padding: 8px 12px;
  display: flex;
  align-items: center;
  gap: 8px;
}

.terminal-button {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  display: inline-block;
}

.terminal-button.close {
  background: var(--terminal-red);
  box-shadow: var(--glow-intensity) var(--terminal-red);
}

.terminal-button.minimize {
  background: var(--terminal-yellow);
  box-shadow: var(--glow-intensity) var(--terminal-yellow);
}

.terminal-button.maximize {
  background: var(--terminal-green);
  box-shadow: var(--glow-intensity) var(--terminal-green);
}

.terminal-title {
  flex: 1;
  text-align: center;
  color: var(--terminal-green);
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 2px;
  text-shadow: var(--glow-intensity) var(--terminal-green);
}

/* CLI Prompt Styles */
.cli-prompt {
  color: var(--terminal-cyan);
  text-shadow: var(--glow-intensity) var(--terminal-cyan);
}

.cli-prompt::before {
  content: '❯ ';
  color: var(--terminal-magenta);
  text-shadow: var(--glow-intensity) var(--terminal-magenta);
}

.cli-cursor {
  display: inline-block;
  width: 10px;
  height: 20px;
  background: var(--terminal-green);
  animation: cursor-blink 1s infinite;
  box-shadow: var(--glow-intensity) var(--terminal-green);
}

/* Text Effects */
.terminal-text {
  color: var(--terminal-green);
  text-shadow: var(--glow-intensity) var(--terminal-green);
  font-family: var(--terminal-font);
}

.glitch-text {
  position: relative;
  color: var(--terminal-cyan);
  text-shadow: var(--glow-intense) var(--terminal-cyan);
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-text::before {
  color: var(--terminal-magenta);
  animation: glitch-1 0.5s infinite;
  z-index: -1;
}

.glitch-text::after {
  color: var(--terminal-cyan);
  animation: glitch-2 0.5s infinite;
  z-index: -2;
}

/* Neon Border Effects - Subtle version */
.neon-border {
  border: 1px solid var(--terminal-cyan);
  box-shadow: inset 0 0 5px rgba(0, 255, 255, 0.1);
  transition: all 0.3s ease;
}

.neon-border:hover {
  box-shadow:
    inset 0 0 10px rgba(0, 255, 255, 0.2),
    var(--glow-intensity) var(--terminal-cyan);
}

.neon-border-green {
  border-color: var(--terminal-green);
  box-shadow: inset 0 0 5px rgba(0, 255, 0, 0.1);
}

.neon-border-green:hover {
  box-shadow:
    inset 0 0 10px rgba(0, 255, 0, 0.2),
    var(--glow-intensity) var(--terminal-green);
}

.neon-border-magenta {
  border-color: var(--terminal-magenta);
  box-shadow: inset 0 0 5px rgba(255, 0, 255, 0.1);
}

.neon-border-magenta:hover {
  box-shadow:
    inset 0 0 10px rgba(255, 0, 255, 0.2),
    var(--glow-intensity) var(--terminal-magenta);
}

.neon-border-cyan {
  border-color: var(--terminal-cyan);
  box-shadow: inset 0 0 5px rgba(0, 255, 255, 0.1);
}

.neon-border-cyan:hover {
  box-shadow:
    inset 0 0 10px rgba(0, 255, 255, 0.2),
    var(--glow-intensity) var(--terminal-cyan);
}

/* ASCII Art Container */
.ascii-art {
  font-family: var(--terminal-font);
  color: var(--terminal-green);
  text-shadow: var(--glow-intensity) var(--terminal-green);
  white-space: pre;
  line-height: 1;
  font-size: 12px;
}

/* Matrix Rain Effect Container */
.matrix-rain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
  overflow: hidden;
}

.matrix-drop {
  position: absolute;
  color: var(--terminal-green);
  font-family: var(--terminal-font);
  font-size: 16px;
  animation: matrix-fall linear infinite;
  text-shadow: var(--glow-intensity) var(--terminal-green);
}

/* Holographic Effect */
.hologram {
  position: relative;
  background: linear-gradient(45deg, transparent 30%, rgba(0, 255, 255, 0.1) 50%, transparent 70%);
  animation: hologram-sweep 3s linear infinite;
}

/* Cyber Grid Background */
.cyber-grid {
  background-image:
    linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: grid-move 20s linear infinite;
}

/* Animations */
@keyframes cursor-blink {
  0%,
  49% {
    opacity: 1;
  }
  50%,
  100% {
    opacity: 0;
  }
}

@keyframes glitch-1 {
  0%,
  100% {
    clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
    transform: translate(-2px, -2px);
  }
  25% {
    clip-path: polygon(0 0, 100% 0, 100% 65%, 0 65%);
    transform: translate(2px, 2px);
  }
  50% {
    clip-path: polygon(0 0, 100% 0, 100% 35%, 0 35%);
    transform: translate(-2px, 2px);
  }
  75% {
    clip-path: polygon(0 0, 100% 0, 100% 55%, 0 55%);
    transform: translate(2px, -2px);
  }
}

@keyframes glitch-2 {
  0%,
  100% {
    clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
    transform: translate(2px, 2px);
  }
  25% {
    clip-path: polygon(0 35%, 100% 35%, 100% 100%, 0 100%);
    transform: translate(-2px, -2px);
  }
  50% {
    clip-path: polygon(0 65%, 100% 65%, 100% 100%, 0 100%);
    transform: translate(2px, -2px);
  }
  75% {
    clip-path: polygon(0 45%, 100% 45%, 100% 100%, 0 100%);
    transform: translate(-2px, 2px);
  }
}

@keyframes neon-pulse {
  0% {
    box-shadow: var(--glow-intensity) currentColor;
  }
  100% {
    box-shadow: var(--glow-extreme) currentColor;
  }
}

@keyframes scanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(10px);
  }
}

@keyframes matrix-fall {
  0% {
    transform: translateY(-100%);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(100vh);
    opacity: 0;
  }
}

@keyframes hologram-sweep {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes grid-move {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 50px 50px;
  }
}

/* Terminal Typing Effect */
.typing-effect {
  overflow: hidden;
  white-space: nowrap;
  animation: typing 3s steps(40, end);
  border-right: 3px solid var(--terminal-green);
  animation:
    typing 3s steps(40, end),
    cursor-blink 1s infinite;
}

@keyframes typing {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

/* Code Block Enhancements */
.terminal-code {
  background: var(--terminal-bg);
  border: 1px solid var(--terminal-green);
  padding: 20px;
  margin: 20px 0;
  position: relative;
  overflow: auto;
  font-family: var(--terminal-font);
  box-shadow: var(--glow-intensity) var(--terminal-green);
}

.terminal-code::before {
  content: '> ';
  color: var(--terminal-magenta);
  text-shadow: var(--glow-intensity) var(--terminal-magenta);
}

/* Responsive */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
  }
}
