---
export interface Props {
  icon?: string;
  title: string;
  role?: string;
  description?: string;
  image?: string;
  class?: string;
  hover?: boolean;
  compact?: boolean;
  mcpTools?: string[];
  prompt?: string;
}

const { icon, title, role, description, image, class: className = '', hover = true, compact = false, mcpTools = [], prompt } = Astro.props;
---

<div class="trading-card-container">
  <div class={`trading-card ${compact ? 'trading-card-compact' : ''} ${className}`} data-compact={compact}>
  <!-- Character image section (moved to top) -->
  {image && (
    <div class="card-image-background">
      <img src={image} alt={title} class="card-character-image" />
      <div class="card-image-overlay"></div>
    </div>
  )}
  
  <!-- Main card content wrapper -->
  <div class="card-main-content">
    <!-- Texture overlays - disabled for performance -->
    <!-- <div class="card-texture"></div>
    <div class="card-holographic"></div> -->
    
    <!-- Hand-drawn corner accents - disabled for performance -->
    <!-- <div class="card-corner card-corner-tl"></div>
    <div class="card-corner card-corner-tr"></div>
    <div class="card-corner card-corner-bl"></div>
    <div class="card-corner card-corner-br"></div> -->
    
    <!-- Top section (image area or icon) -->
    <div class="card-image-section">
      {!image && (
        <div class="flex items-center justify-center h-full bg-gradient-to-b from-terminal-bg/50 to-terminal-bg">
          <div class={`${compact ? 'text-4xl' : 'text-6xl'} text-terminal-cyan/20 animate-pulse`}>
            {icon || '?'}
          </div>
        </div>
      )}
      
      <!-- Rarity indicator - disabled for performance -->
      <!-- <div class="card-rarity"></div> -->
    </div>
  
  <!-- Content section -->
  <div class="card-content-section">
    <!-- Title with ornate frame -->
    <div class="card-title-frame">
      <h3 class={`text-center ${compact ? 'text-base' : 'text-xl'} font-bold text-terminal-green ${compact ? 'leading-tight' : 'leading-normal'}`}>
        {title}
      </h3>
      {role && (
        <p class={`text-center ${compact ? 'text-[11px]' : 'text-sm'} text-terminal-cyan/60 font-light ${compact ? 'mt-0.5' : 'mt-1'} ${compact ? 'leading-tight' : 'leading-normal'}`}>
          ({role})
        </p>
      )}
    </div>
    
    <!-- Description -->
    {description && (
      <div class={`relative ${compact ? 'px-1' : 'px-2'}`}>
        <p class={`text-center ${compact ? 'text-[11px]' : 'text-sm'} text-terminal-green/80 ${compact ? 'leading-snug' : 'leading-relaxed'} font-mono ${compact ? 'line-clamp-3' : ''}`}>
          {description}
        </p>
      </div>
    )}
    
    <!-- MCP Tools (shown on hover for compact cards) -->
    {mcpTools && mcpTools.length > 0 && (
      <div class="card-mcp-tools">
        <div class="mcp-header">
          <div class="mcp-icon">⚡</div>
          <p class="text-[10px] text-terminal-cyan font-mono font-semibold tracking-wide">MCP TOOLS</p>
          <div class="mcp-icon">⚡</div>
        </div>
        <div class="mcp-tools-grid">
          {mcpTools.map((tool) => (
            <div class="mcp-tool-item">
              <span class="mcp-tool-text">{tool}</span>
            </div>
          ))}
        </div>
      </div>
    )}
    
    <!-- Card ID/Number with foil effect -->
    {!compact && (
      <div class="absolute bottom-2 right-2 text-xs font-mono">
        <span class="inline-block bg-gradient-to-br from-terminal-cyan/40 via-terminal-magenta/40 to-terminal-cyan/40 bg-clip-text text-transparent">
          #{String(Math.floor(Math.random() * 999) + 1).padStart(3, '0')}
        </span>
      </div>
    )}
  </div>
  
    <!-- Scan lines effect - disabled for performance -->
    <!-- <div class="absolute inset-0 pointer-events-none opacity-10">
      <div class="h-full w-full bg-gradient-to-b from-transparent via-terminal-green/50 to-transparent animate-scan"></div>
    </div> -->
  </div>
  </div>
</div>

<style>
  @import '../styles/trading-card.css';
  
  .trading-card-container {
    display: inline-block;
    width: 200px;
    height: 260px;
    position: relative;
  }
</style>

