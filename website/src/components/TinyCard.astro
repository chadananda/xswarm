---
export interface Props {
  icon?: string;
  title: string;
  role?: string;
  class?: string;
}

const { icon, title, role, class: className = '' } = Astro.props;
---

<div class={`tiny-card ${className}`}>
  <div class="tiny-card-content">
    {icon && (
      <span class="tiny-card-icon">{icon}</span>
    )}
    <div class="tiny-card-text">
      <h4 class="tiny-card-title">{title}</h4>
      {role && (
        <p class="tiny-card-role">({role})</p>
      )}
    </div>
  </div>
</div>

<style>
  .tiny-card {
    display: inline-flex;
    background: linear-gradient(145deg, 
      rgba(28, 35, 43, 0.9) 0%, 
      rgba(20, 25, 32, 0.9) 100%
    );
    border: 1px solid rgba(0, 255, 255, 0.3);
    border-radius: 8px;
    padding: 0.5rem 0.75rem;
    box-shadow: 
      inset 0 1px 2px rgba(255, 255, 255, 0.05),
      0 2px 4px rgba(0, 0, 0, 0.4);
    transition: all 0.2s ease;
  }
  
  .tiny-card:hover {
    transform: translateY(-1px);
    box-shadow: 
      inset 0 1px 2px rgba(255, 255, 255, 0.1),
      0 4px 8px rgba(0, 0, 0, 0.6),
      0 0 20px rgba(0, 255, 255, 0.1);
    border-color: rgba(0, 255, 255, 0.5);
  }
  
  .tiny-card-content {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .tiny-card-icon {
    font-size: 1.25rem;
    opacity: 0.8;
  }
  
  .tiny-card-text {
    display: flex;
    flex-direction: column;
  }
  
  .tiny-card-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: rgb(var(--color-terminal-green));
    line-height: 1.2;
  }
  
  .tiny-card-role {
    font-size: 0.625rem;
    color: rgba(var(--color-terminal-cyan), 0.6);
    line-height: 1.2;
    margin-top: 0.125rem;
  }
</style>