---
export interface Props {
  title: string;
  segments: Array<{
    label: string;
    value: number;
    color: string;
    cost: string;
  }>;
  total: {
    tokens: number;
    cost: string;
  };
}

const { title, segments, total } = Astro.props;

// Calculate percentages
const segmentsWithPercentages = segments.map(segment => ({
  ...segment,
  percentage: (segment.value / total.tokens) * 100
}));
---

<div class="token-breakdown-chart my-8 p-6 bg-gray-900 rounded-lg border border-gray-700">
  <h3 class="text-2xl font-bold text-cyan-400 mb-6">{title}</h3>
  
  <!-- Visual Bar Chart -->
  <div class="chart-container mb-6">
    <div class="bar-chart h-12 rounded-lg overflow-hidden flex">
      {segmentsWithPercentages.map((segment) => (
        <div 
          class="segment relative group"
          style={`width: ${segment.percentage}%; background-color: ${segment.color};`}
          title={`${segment.label}: ${segment.percentage.toFixed(1)}%`}
        >
          {segment.percentage > 10 && (
            <span class="absolute inset-0 flex items-center justify-center text-xs font-bold text-white">
              {segment.percentage.toFixed(0)}%
            </span>
          )}
        </div>
      ))}
    </div>
  </div>
  
  <!-- Legend -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
    {segmentsWithPercentages.map((segment) => (
      <div class="legend-item flex items-center justify-between p-3 bg-gray-800 rounded">
        <div class="flex items-center gap-3">
          <div 
            class="w-4 h-4 rounded"
            style={`background-color: ${segment.color};`}
          ></div>
          <span class="text-gray-300">{segment.label}</span>
        </div>
        <div class="text-right">
          <div class="font-mono text-white">{(segment.value / 1000).toFixed(0)}k tokens</div>
          <div class="text-sm text-gray-400">{segment.cost}</div>
        </div>
      </div>
    ))}
  </div>
  
  <!-- Total -->
  <div class="total-section p-4 bg-gradient-to-r from-cyan-950/30 to-blue-950/30 rounded-lg border border-cyan-800">
    <div class="flex items-center justify-between">
      <span class="text-lg font-semibold text-cyan-300">Total</span>
      <div class="text-right">
        <div class="text-2xl font-bold font-mono text-white">
          {(total.tokens / 1000).toFixed(0)}k tokens
        </div>
        <div class="text-lg text-cyan-400">{total.cost}</div>
      </div>
    </div>
  </div>
</div>

<style>
  .segment {
    transition: all 0.3s ease;
  }
  
  .bar-chart:hover .segment {
    opacity: 0.8;
  }
  
  .bar-chart:hover .segment:hover {
    opacity: 1;
    filter: brightness(1.2);
  }
  
  .legend-item {
    transition: all 0.2s ease;
  }
  
  .legend-item:hover {
    background-color: rgba(55, 65, 81, 0.8);
    transform: translateX(2px);
  }
</style>