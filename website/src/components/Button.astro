---
export interface Props {
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  target?: string;
  class?: string;
  [key: string]: any;
}

const { 
  variant = 'primary', 
  size = 'md', 
  href,
  target,
  class: className = '',
  ...props 
} = Astro.props;

const variantClasses = {
  primary: 'bg-terminal-bg text-terminal-green border border-terminal-green hover:text-terminal-cyan hover:border-terminal-cyan hover:shadow-lg',
  secondary: 'bg-terminal-bg text-terminal-cyan border border-terminal-cyan hover:text-terminal-magenta hover:border-terminal-magenta hover:shadow-lg',
  ghost: 'bg-transparent text-terminal-green hover:text-terminal-cyan hover:bg-terminal-bg/20'
};

const sizeClasses = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg'
};

const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 transform hover:scale-105 terminal-text';
const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;

const Component = href ? 'a' : 'button';
---

<Component 
  class={classes}
  href={href}
  target={target}
  {...props}
>
  <slot />
</Component>