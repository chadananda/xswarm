---
import Layout from './Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import readingTime from 'reading-time';
import { getCollection } from 'astro:content';
import '../styles/mermaid.css';
import '../styles/blog.css';

export interface Props {
  title: string;
  description: string;
  publishDate: Date;
  author: string;
  image?: string;
  imageAlt?: string;
  tags?: string[];
  content: string;
}

const { title, description, publishDate, author, image, imageAlt, tags = [], content } = Astro.props;
const stats = readingTime(content);

const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(publishDate);

// Get related articles based on shared tags
const allPosts = await getCollection('blog');
const relatedPosts = allPosts
  .filter(post => 
    post.data.title !== title && // Exclude current post
    post.data.tags?.some(tag => tags.includes(tag)) // Has at least one shared tag
  )
  .sort((a, b) => {
    // Sort by number of shared tags
    const aSharedTags = a.data.tags?.filter(tag => tags.includes(tag)).length || 0;
    const bSharedTags = b.data.tags?.filter(tag => tags.includes(tag)).length || 0;
    return bSharedTags - aSharedTags;
  })
  .slice(0, 5); // Limit to 5 related posts
---

<Layout title={`${title} - xSwarm.ai Blog`} description={description}>
  <Navbar />
  
  <main>
    <!-- Hero Image First -->
    {image && (
      <div class="blog-hero-image-top">
        <img
          src={image}
          alt={imageAlt || title}
        />
      </div>
    )}
    
    <!-- Hero Section -->
    <div class="blog-hero">
      <div class="container mx-auto px-4 max-w-4xl">
        <h1 class="blog-title" data-text={title}>
          {title}
        </h1>
        
        <p class="blog-description">
          {description}
        </p>

        {tags.length > 0 && (
          <div class="blog-tags">
            {tags.map((tag) => (
              <span class="blog-tag">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </div>
    
    <div class="container mx-auto px-4 max-w-7xl py-12">
      <div class="lg:grid lg:grid-cols-12 lg:gap-8">
        <!-- Main Article Content -->
        <article class="lg:col-span-8">
          <!-- Blog Metadata -->
          <div class="blog-meta-article">
            <time class="blog-date" datetime={publishDate.toISOString()}>{formattedDate}</time>
            <span class="blog-author">{author}</span>
            <span class="blog-reading-time">{stats.text}</span>
          </div>

          <!-- Article Content -->
          <div class="blog-article">
            <slot />
          </div>

          <!-- Author Bio -->
          <div class="mt-16 pt-8 border-t border-border">
            <div class="flex items-start space-x-4">
              <img
                src="/xswarm.png"
                alt={author}
                class="w-16 h-16 rounded-full"
              />
              <div>
                <h3 class="font-semibold text-primary">{author}</h3>
                <p class="text-tertiary mt-1">
                  Creator of xSwarm.ai, empowering developers to transform into a Team of One with AI-powered development coordination.
                </p>
                <div class="flex space-x-4 mt-3">
                  <a
                    href="https://github.com/chadananda"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-tertiary hover:text-link transition-colors"
                  >
                    GitHub
                  </a>
                  <a
                    href="https://twitter.com/xswarmai"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-tertiary hover:text-link transition-colors"
                  >
                    Twitter
                  </a>
                </div>
              </div>
            </div>
          </div>

          <!-- Share Section -->
          <div class="cyberpunk-share-section">
            <div class="share-glitch-container">
              <h3 class="share-title" data-text="BROADCAST THIS SIGNAL">BROADCAST THIS SIGNAL</h3>
            </div>
            <div class="share-buttons-grid">
              <a
                href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(Astro.url.href)}`}
                target="_blank"
                rel="noopener noreferrer"
                class="share-button twitter-share"
              >
                <span class="share-icon">
                  <svg viewBox="0 0 24 24" fill="currentColor" width="20" height="20">
                    <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
                  </svg>
                </span>
                <span class="share-label">X / Twitter</span>
                <span class="share-effect"></span>
              </a>
              <a
                href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}`}
                target="_blank"
                rel="noopener noreferrer"
                class="share-button linkedin-share"
              >
                <span class="share-icon">
                  <svg viewBox="0 0 24 24" fill="currentColor" width="20" height="20">
                    <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </span>
              <span class="share-label">LinkedIn</span>
              <span class="share-effect"></span>
            </a>
            <button
              onclick="navigator.clipboard.writeText(window.location.href).then(() => { 
                this.classList.add('copied'); 
                setTimeout(() => this.classList.remove('copied'), 2000); 
              })"
              class="share-button copy-share"
            >
              <span class="share-icon">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" width="20" height="20">
                  <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                  <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                </svg>
              </span>
              <span class="share-label">Copy Link</span>
              <span class="share-effect"></span>
            </button>
          </div>
          </div>
        </article>

        <!-- Related Articles Sidebar -->
        <aside class="hidden lg:block lg:col-span-4">
          {relatedPosts.length > 0 && (
            <div class="sticky top-24">
              <h3 class="text-xl font-bold text-cyan-400 mb-6">Related Articles</h3>
              <div class="space-y-6">
                {relatedPosts.map((post) => (
                  <a 
                    href={`/blog/${post.slug}`} 
                    class="block group"
                  >
                    <article class="p-4 bg-gray-900/50 border border-gray-800 rounded-lg hover:border-cyan-500/50 transition-all duration-300">
                      {post.data.image && (
                        <div class="mb-3 overflow-hidden rounded-lg">
                          <img 
                            src={post.data.image} 
                            alt={post.data.imageAlt || post.data.title}
                            class="w-full h-32 object-cover group-hover:scale-105 transition-transform duration-300"
                          />
                        </div>
                      )}
                      <h4 class="font-semibold text-gray-100 group-hover:text-cyan-400 transition-colors mb-2 line-clamp-2">
                        {post.data.title}
                      </h4>
                      <p class="text-sm text-gray-400 line-clamp-3 mb-3">
                        {post.data.description}
                      </p>
                      <div class="flex flex-wrap gap-2">
                        {post.data.tags?.filter(tag => tags.includes(tag)).map((tag) => (
                          <span class="text-xs px-2 py-1 bg-cyan-900/30 text-cyan-400 rounded-full border border-cyan-500/30">
                            {tag}
                          </span>
                        ))}
                      </div>
                    </article>
                  </a>
                ))}
              </div>
            </div>
          )}
        </aside>
      </div>
    </div>
  </main>
  
  <Footer />
</Layout>

<script>
  import mermaid from 'mermaid';
  
  // Initialize mermaid with cyberpunk theme
  mermaid.initialize({ 
    startOnLoad: false,
    theme: 'dark',
    themeVariables: {
      primaryColor: '#3B82F6',
      primaryTextColor: '#0ff',
      primaryBorderColor: '#0ff',
      lineColor: '#0ff',
      secondaryColor: '#8B5CF6',
      tertiaryColor: '#6366F1',
      background: '#030712',
      mainBkg: '#030712',
      secondBkg: '#0a0a0a',
      tertiaryBkg: '#111827',
      secondaryBorderColor: '#f0f',
      tertiaryBorderColor: '#ff0',
      secondaryTextColor: '#f0f',
      tertiaryTextColor: '#ff0',
      textColor: '#fff',
      titleColor: '#0ff',
      arrowheadColor: '#0ff',
      edgeLabelBackground: '#030712',
      clusterBkg: '#111827',
      clusterBorder: '#0ff',
      defaultLinkColor: '#0ff',
      fontFamily: 'JetBrains Mono, monospace',
      fontSize: '20px',
      nodeTextSize: '20px',
      edgeLabelSize: '18px',
    },
    securityLevel: 'loose',
    flowchart: {
      htmlLabels: true,
      curve: 'basis'
    }
  });
  
  // Find all mermaid code blocks and render them
  document.addEventListener('DOMContentLoaded', () => {
    // Look for Shiki-processed mermaid blocks
    const codeBlocks = document.querySelectorAll('pre.astro-code[data-language="mermaid"]');
    
    codeBlocks.forEach((pre, index) => {
      const code = pre.querySelector('code');
      if (code) {
        const container = document.createElement('div');
        container.className = 'mermaid-container';
        const mermaidDiv = document.createElement('div');
        mermaidDiv.className = 'mermaid';
        mermaidDiv.id = `mermaid-${index}`;
        
        // Clean up the mermaid code
        let mermaidCode = code.textContent.trim();
        
        // Fix common issues with node IDs containing brackets
        mermaidCode = mermaidCode.replace(/\[([^\]]+)\]/g, (match, content) => {
          // Keep node labels but ensure IDs are clean
          return `["${content}"]`;
        });
        
        mermaidDiv.textContent = mermaidCode;
        container.appendChild(mermaidDiv);
        
        // Add error handling
        try {
          pre.parentNode.replaceChild(container, pre);
        } catch (error) {
          console.error('Mermaid diagram error:', error);
          container.innerHTML = `<div class="mermaid-error">Unable to render diagram: ${error.message}</div>`;
          pre.parentNode.replaceChild(container, pre);
        }
      }
    });
    
    // Run mermaid with error handling
    try {
      mermaid.run();
    } catch (error) {
      console.error('Mermaid initialization error:', error);
    }
  });
</script>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=JetBrains+Mono:wght@300;400;500;700&family=Inter:wght@300;400;500;600;700&display=swap');

  /* Blog-specific CSS Variables */
  :root {
    /* Typography Scale */
    --blog-font-size-xs: clamp(0.75rem, 0.7rem + 0.25vw, 0.875rem);
    --blog-font-size-sm: clamp(0.875rem, 0.825rem + 0.25vw, 1rem);
    --blog-font-size-base: clamp(1rem, 0.95rem + 0.25vw, 1.125rem);
    --blog-font-size-lg: clamp(1.125rem, 1.05rem + 0.375vw, 1.25rem);
    --blog-font-size-xl: clamp(1.25rem, 1.15rem + 0.5vw, 1.5rem);
    --blog-font-size-2xl: clamp(1.5rem, 1.35rem + 0.75vw, 1.875rem);
    --blog-font-size-3xl: clamp(1.875rem, 1.65rem + 1.125vw, 2.25rem);
    --blog-font-size-4xl: clamp(2.25rem, 1.95rem + 1.5vw, 3rem);
    --blog-font-size-5xl: clamp(3rem, 2.5rem + 2.5vw, 4rem);
    
    /* Line Heights */
    --blog-line-height-tight: 1.25;
    --blog-line-height-snug: 1.375;
    --blog-line-height-normal: 1.6;
    --blog-line-height-relaxed: 1.75;
    --blog-line-height-loose: 2;
    
    /* Letter Spacing */
    --blog-letter-spacing-tighter: -0.05em;
    --blog-letter-spacing-tight: -0.025em;
    --blog-letter-spacing-normal: 0;
    --blog-letter-spacing-wide: 0.025em;
    --blog-letter-spacing-wider: 0.05em;
    --blog-letter-spacing-widest: 0.1em;
    
    /* Cyberpunk Colors */
    --blog-neon-cyan: #00d4ff;
    --blog-neon-pink: #ff00aa;
    --blog-neon-yellow: #ffaa00;
    --blog-neon-green: #00ff88;
    --blog-deep-purple: #1a1a2e;
    --blog-mid-purple: #252545;
    --blog-light-purple: #353568;
    
    /* Text Shadows for Glow Effects */
    --blog-glow-cyan: 0 0 10px rgba(0, 212, 255, 0.5), 0 0 20px rgba(0, 212, 255, 0.3);
    --blog-glow-pink: 0 0 10px rgba(255, 0, 170, 0.5), 0 0 20px rgba(255, 0, 170, 0.3);
    --blog-glow-subtle: 0 0 5px rgba(0, 212, 255, 0.2);
  }

  /* Hero Image at Top */
  .blog-hero-image-top {
    position: relative;
    width: 100%;
    height: 85vh;
    min-height: 600px;
    max-height: 900px;
    overflow: hidden;
    margin-top: 0;
    margin-bottom: 0;
    padding: 0 10px;
  }
  
  .blog-hero-image-top img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 8px;
  }

  /* Blog Hero Section */
  .blog-hero {
    position: relative;
    overflow: hidden;
    background: #1a1a2e;
    padding: 2rem 0 3rem;
    margin-top: 0;
  }
  
  /* Cyberpunk grid background */
  .blog-hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      linear-gradient(rgba(0, 212, 255, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 212, 255, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: grid-move 20s linear infinite;
  }
  
  /* Gradient overlay */
  .blog-hero::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(26, 26, 46, 0.9) 0%,
      rgba(26, 26, 46, 0.7) 50%,
      rgba(255, 0, 170, 0.1) 100%
    );
  }

  @keyframes grid-move {
    0% { transform: translate(0, 0); }
    100% { transform: translate(50px, 50px); }
  }

  /* Blog Title with Glitch Effect */
  .blog-title {
    font-family: 'Orbitron', sans-serif;
    font-size: clamp(2.5rem, 5vw, 4.5rem);
    font-weight: 900;
    line-height: 1.1;
    color: white;
    position: relative;
    z-index: 10;
    margin-bottom: 1.5rem;
    text-transform: uppercase;
    letter-spacing: -0.02em;
  }
  
  /* Glitch effect layers */
  .blog-title::before,
  .blog-title::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .blog-title::before {
    animation: glitch-1 2.5s infinite;
    color: var(--blog-neon-cyan);
    z-index: -1;
    opacity: 0.4;
  }

  .blog-title::after {
    animation: glitch-2 2.5s infinite;
    color: var(--blog-neon-pink);
    z-index: -2;
    opacity: 0.4;
  }

  @keyframes glitch-1 {
    0%, 100% {
      clip-path: polygon(0 0, 100% 0, 100% 45%, 0 45%);
      transform: translate(-2px, -2px);
    }
    25% {
      clip-path: polygon(0 0, 100% 0, 100% 65%, 0 65%);
      transform: translate(2px, 2px);
    }
    50% {
      clip-path: polygon(0 0, 100% 0, 100% 35%, 0 35%);
      transform: translate(-2px, 2px);
    }
    75% {
      clip-path: polygon(0 0, 100% 0, 100% 55%, 0 55%);
      transform: translate(2px, -2px);
    }
  }

  @keyframes glitch-2 {
    0%, 100% {
      clip-path: polygon(0 55%, 100% 55%, 100% 100%, 0 100%);
      transform: translate(2px, 2px);
    }
    25% {
      clip-path: polygon(0 35%, 100% 35%, 100% 100%, 0 100%);
      transform: translate(-2px, -2px);
    }
    50% {
      clip-path: polygon(0 65%, 100% 65%, 100% 100%, 0 100%);
      transform: translate(2px, -2px);
    }
    75% {
      clip-path: polygon(0 45%, 100% 45%, 100% 100%, 0 100%);
      transform: translate(-2px, 2px);
    }
  }

  /* Blog Description */
  .blog-description {
    font-size: var(--blog-font-size-xl);
    line-height: var(--blog-line-height-normal);
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 1.5rem;
    max-width: 800px;
    position: relative;
    z-index: 10;
  }

  /* Blog Tags */
  .blog-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    position: relative;
    z-index: 10;
  }

  .blog-tag {
    display: inline-block;
    padding: 0.375rem 1rem;
    background: rgba(0, 212, 255, 0.1);
    border: 1px solid rgba(0, 212, 255, 0.3);
    border-radius: 9999px;
    color: var(--blog-neon-cyan);
    font-size: var(--blog-font-size-sm);
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .blog-tag:hover {
    background: rgba(0, 212, 255, 0.2);
    border-color: var(--blog-neon-cyan);
    box-shadow: 0 0 10px rgba(0, 212, 255, 0.3);
  }

  /* Blog Metadata Styling */
  .blog-meta-article {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(139, 92, 246, 0.2);
    font-family: 'JetBrains Mono', monospace;
    font-size: 0.875rem;
    color: var(--text-secondary);
  }

  .blog-meta-article .blog-date {
    color: var(--blog-neon-cyan);
  }

  .blog-meta-article .blog-author {
    color: var(--blog-neon-pink);
  }

  .blog-meta-article .blog-reading-time {
    color: #fbbf24;
    margin-left: auto;
  }

  /* Add separators between metadata items */
  .blog-meta-article span:not(:first-child)::before {
    content: '•';
    margin: 0 0.5rem;
    color: rgba(255, 255, 255, 0.3);
  }

  .blog-meta-article .blog-reading-time::before {
    content: '•';
    margin: 0 0.5rem;
    color: rgba(255, 255, 255, 0.3);
  }

  /* Blog Article Container */
  .blog-article {
    font-family: 'Inter', system-ui, -apple-system, sans-serif;
    font-size: var(--blog-font-size-base);
    line-height: var(--blog-line-height-relaxed);
    color: var(--color-text-primary);
    letter-spacing: var(--blog-letter-spacing-normal);
    font-weight: 400;
    max-width: 72ch;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  /* Blog Article Typography */
  .blog-article h1 {
    font-family: 'Orbitron', 'Inter', sans-serif;
    font-size: var(--blog-font-size-5xl);
    font-weight: 900;
    line-height: var(--blog-line-height-tight);
    letter-spacing: var(--blog-letter-spacing-tight);
    margin: 3rem 0 2rem;
    color: var(--color-text-primary);
    position: relative;
  }

  .blog-article h2 {
    font-family: 'Orbitron', 'Inter', sans-serif;
    font-size: var(--blog-font-size-3xl);
    font-weight: 700;
    line-height: var(--blog-line-height-snug);
    letter-spacing: var(--blog-letter-spacing-tight);
    margin: 4rem 0 1.5rem;
    color: var(--color-text-primary);
    position: relative;
    padding-top: 1.5rem;
  }

  .blog-article h2::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 60px;
    height: 2px;
    background: linear-gradient(
      to right,
      var(--blog-neon-cyan),
      transparent
    );
  }

  .blog-article h3 {
    font-family: 'JetBrains Mono', 'Courier New', monospace;
    font-size: var(--blog-font-size-2xl);
    font-weight: 600;
    line-height: var(--blog-line-height-snug);
    letter-spacing: var(--blog-letter-spacing-normal);
    margin: 2rem 0 1rem;
    color: var(--blog-neon-cyan);
  }

  .blog-article p {
    margin: 1.5rem 0;
    font-size: var(--blog-font-size-lg);
    line-height: var(--blog-line-height-relaxed);
    color: var(--color-text-secondary);
  }

  .blog-article p:first-of-type {
    font-size: var(--blog-font-size-xl);
    line-height: var(--blog-line-height-normal);
    color: var(--color-text-primary);
    font-weight: 400;
    margin-bottom: 2rem;
  }

  .blog-article strong,
  .blog-article b {
    font-weight: 600;
    color: var(--color-text-primary);
    letter-spacing: var(--blog-letter-spacing-tight);
  }

  .blog-article em,
  .blog-article i {
    font-style: italic;
    color: var(--blog-neon-cyan);
    font-weight: 500;
  }

  .blog-article a {
    color: var(--blog-neon-cyan);
    text-decoration: none;
    font-weight: 500;
    position: relative;
    transition: all 0.3s ease;
  }

  .blog-article a::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 1px;
    background: var(--blog-neon-cyan);
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
  }

  .blog-article a:hover {
    color: var(--blog-neon-pink);
    text-shadow: var(--blog-glow-subtle);
  }

  .blog-article a:hover::after {
    transform: scaleX(1);
    transform-origin: left;
    background: var(--blog-neon-pink);
  }

  /* Lists */
  .blog-article ul,
  .blog-article ol {
    margin: 1.5rem 0;
    padding-left: 2rem;
  }

  .blog-article ul li,
  .blog-article ol li {
    margin: 0.75rem 0;
    line-height: var(--blog-line-height-normal);
    color: var(--color-text-secondary);
  }

  .blog-article ul {
    list-style-type: none;
  }

  .blog-article ul li {
    position: relative;
    padding-left: 1.5rem;
  }

  .blog-article ul li::before {
    content: '▸';
    position: absolute;
    left: 0;
    color: var(--blog-neon-cyan);
    font-weight: bold;
    font-size: 1.2em;
  }

  /* Blockquotes */
  .blog-article blockquote {
    margin: 2rem 0;
    padding: 1.5rem 2rem;
    background: linear-gradient(
      135deg,
      rgba(0, 212, 255, 0.05) 0%,
      rgba(255, 0, 170, 0.05) 100%
    );
    border-left: 4px solid var(--blog-neon-cyan);
    position: relative;
    font-style: italic;
  }

  .blog-article blockquote::before {
    content: '"';
    position: absolute;
    top: -10px;
    left: 10px;
    font-size: 4rem;
    color: var(--blog-neon-cyan);
    opacity: 0.2;
    font-family: 'Orbitron', sans-serif;
  }

  .blog-article blockquote p {
    margin: 0;
    font-size: var(--blog-font-size-xl);
    line-height: var(--blog-line-height-normal);
    color: var(--color-text-primary);
  }

  /* Code Blocks */
  .blog-article pre {
    margin: 2rem 0;
    padding: 1.5rem;
    background: var(--blog-deep-purple);
    border: 1px solid rgba(0, 212, 255, 0.2);
    border-radius: 8px;
    overflow-x: auto;
    position: relative;
  }

  .blog-article pre::before {
    content: '◉ ◉ ◉';
    position: absolute;
    top: 0.75rem;
    left: 1rem;
    color: rgba(255, 255, 255, 0.3);
    font-size: 0.75rem;
    letter-spacing: 0.5rem;
  }

  .blog-article pre code {
    font-family: 'JetBrains Mono', 'Courier New', monospace;
    font-size: var(--blog-font-size-sm);
    line-height: var(--blog-line-height-normal);
    color: var(--blog-neon-green);
    background: none;
    padding: 0;
    border: none;
  }

  /* Inline Code */
  .blog-article code {
    font-family: 'JetBrains Mono', 'Courier New', monospace;
    font-size: 0.9em;
    padding: 0.2em 0.4em;
    background: rgba(0, 212, 255, 0.1);
    border: 1px solid rgba(0, 212, 255, 0.2);
    border-radius: 4px;
    color: var(--blog-neon-cyan);
    white-space: nowrap;
  }

  /* Images */
  .blog-article img {
    max-width: 100%;
    height: auto;
    margin: 2rem 0;
    border-radius: 8px;
    box-shadow: 
      0 4px 20px rgba(0, 0, 0, 0.3),
      0 0 40px rgba(0, 212, 255, 0.1);
    transition: all 0.3s ease;
  }

  .blog-article img:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 8px 30px rgba(0, 0, 0, 0.4),
      0 0 60px rgba(0, 212, 255, 0.2);
  }

  /* Cyberpunk Share Section */
  .cyberpunk-share-section {
    margin-top: 4rem;
    padding: 3rem;
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.9) 0%, rgba(26, 26, 46, 0.8) 100%);
    border: 2px solid rgba(0, 212, 255, 0.3);
    border-radius: 1rem;
    position: relative;
    overflow: hidden;
  }

  /* Animated border effect */
  .cyberpunk-share-section::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(0, 212, 255, 0.6),
      transparent,
      rgba(255, 0, 170, 0.6),
      transparent
    );
    background-size: 200% 200%;
    animation: border-flow 3s linear infinite;
    z-index: -1;
    border-radius: 1rem;
  }

  @keyframes border-flow {
    0% { background-position: 0% 50%; }
    100% { background-position: 200% 50%; }
  }

  /* Share Title with Glitch */
  .share-glitch-container {
    text-align: center;
    margin-bottom: 2.5rem;
  }

  .share-title {
    font-family: 'Orbitron', sans-serif;
    font-size: 1.75rem;
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: 0.2em;
    color: white;
    position: relative;
    display: inline-block;
  }

  .share-title::before,
  .share-title::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .share-title::before {
    animation: glitch-share-1 0.6s infinite;
    color: #00d4ff;
    z-index: -1;
  }

  .share-title::after {
    animation: glitch-share-2 0.6s infinite;
    color: #ff00aa;
    z-index: -2;
  }

  @keyframes glitch-share-1 {
    0%, 100% { 
      clip-path: inset(0 0 0 0); 
      transform: translate(0);
    }
    33% { 
      clip-path: inset(20% 0 60% 0); 
      transform: translate(-2px, 1px);
    }
    66% { 
      clip-path: inset(60% 0 20% 0); 
      transform: translate(2px, -1px);
    }
  }

  @keyframes glitch-share-2 {
    0%, 100% { 
      clip-path: inset(0 0 0 0); 
      transform: translate(0);
    }
    33% { 
      clip-path: inset(60% 0 20% 0); 
      transform: translate(2px, 1px);
    }
    66% { 
      clip-path: inset(20% 0 60% 0); 
      transform: translate(-2px, -1px);
    }
  }

  /* Share Buttons Grid */
  .share-buttons-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1.5rem;
    max-width: 600px;
    margin: 0 auto;
  }

  /* Share Button Base */
  .share-button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 1rem 1.5rem;
    background: rgba(0, 0, 0, 0.6);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 0.5rem;
    color: white;
    text-decoration: none;
    font-family: 'JetBrains Mono', monospace;
    font-size: 0.9rem;
    font-weight: 500;
    transition: all 0.3s ease;
    overflow: hidden;
    cursor: pointer;
  }

  /* Remove button styles for copy button */
  button.share-button {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
  }

  /* Hover effect backdrop */
  .share-effect {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.5s ease;
    z-index: 0;
  }

  /* Icons and labels */
  .share-icon,
  .share-label {
    position: relative;
    z-index: 1;
  }

  .share-icon {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* Twitter/X Share */
  .twitter-share {
    border-color: rgba(29, 161, 242, 0.3);
  }

  .twitter-share:hover {
    border-color: rgba(29, 161, 242, 0.8);
    color: #1DA1F2;
    text-shadow: 0 0 10px rgba(29, 161, 242, 0.5);
  }

  .twitter-share .share-effect {
    background: radial-gradient(circle, rgba(29, 161, 242, 0.3) 0%, transparent 70%);
  }

  .twitter-share:hover .share-effect {
    width: 300px;
    height: 300px;
  }

  /* LinkedIn Share */
  .linkedin-share {
    border-color: rgba(0, 119, 181, 0.3);
  }

  .linkedin-share:hover {
    border-color: rgba(0, 119, 181, 0.8);
    color: #0077B5;
    text-shadow: 0 0 10px rgba(0, 119, 181, 0.5);
  }

  .linkedin-share .share-effect {
    background: radial-gradient(circle, rgba(0, 119, 181, 0.3) 0%, transparent 70%);
  }

  .linkedin-share:hover .share-effect {
    width: 300px;
    height: 300px;
  }

  /* Copy Link */
  .copy-share {
    border-color: rgba(0, 212, 255, 0.3);
  }

  .copy-share:hover {
    border-color: rgba(0, 212, 255, 0.8);
    color: #00d4ff;
    text-shadow: 0 0 10px rgba(0, 212, 255, 0.5);
  }

  .copy-share .share-effect {
    background: radial-gradient(circle, rgba(0, 212, 255, 0.3) 0%, transparent 70%);
  }

  .copy-share:hover .share-effect {
    width: 300px;
    height: 300px;
  }

  .copy-share.copied .share-label::after {
    content: ' ✓';
    color: var(--blog-neon-green);
  }

  /* Line clamp utilities */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .blog-article {
      padding: 0 1rem;
    }
    
    .blog-article h1::before {
      display: none;
    }
    
    .blog-article ul li {
      padding-left: 1rem;
    }

    .blog-meta-article {
      flex-wrap: wrap;
      gap: 0.5rem;
    }
    
    .blog-meta-article .blog-reading-time {
      margin-left: 0;
      width: 100%;
    }
  }

  /* Fix for code blocks in terminal windows */
  .code-example pre,
  .blog-article pre[class*="astro-code"] {
    max-height: none !important;
    overflow: auto !important;
  }
  
  /* Ensure code content is visible */
  .code-example pre code,
  .blog-article pre[class*="astro-code"] code {
    display: block;
    white-space: pre;
    overflow-x: auto;
    padding: 1rem;
  }
  
  /* Terminal window code block fix */
  pre.astro-code {
    min-height: auto !important;
    max-height: 600px !important;
    overflow-y: auto !important;
    overflow-x: auto !important;
  }

  /* Override Shiki's inline styles for code blocks */
  .blog-article pre.astro-code {
    white-space: pre !important;
    word-wrap: normal !important;
    overflow-x: auto !important;
  }

  .blog-article pre.astro-code code {
    white-space: pre !important;
    word-wrap: normal !important;
    display: block;
    width: max-content;
    min-width: 100%;
  }
</style>