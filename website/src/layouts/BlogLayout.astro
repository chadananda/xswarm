---
import Layout from './Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import readingTime from 'reading-time';
import '../styles/blog-typography.css';
import '../styles/blog-header.css';
import '../styles/blog-visuals.css';
import '../styles/blog-manifesto.css';
import '../styles/blog-scrollbar.css';

export interface Props {
  title: string;
  description: string;
  publishDate: Date;
  author: string;
  image?: string;
  imageAlt?: string;
  tags?: string[];
  content: string;
}

const { title, description, publishDate, author, image, imageAlt, tags = [], content } = Astro.props;
const stats = readingTime(content);

const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(publishDate);
---

<Layout title={`${title} - XSwarm.ai Blog`} description={description}>
  <Navbar />
  
  <main class="pt-0">
    <!-- Hero Section -->
    <div class="blog-hero">
      <div class="container mx-auto px-4 max-w-4xl">
        <div class="blog-meta">
          <time class="blog-date" datetime={publishDate.toISOString()}>{formattedDate}</time>
          <span class="blog-author">{author}</span>
          <span class="blog-reading-time">{stats.text}</span>
        </div>
        
        <h1 class="blog-title" data-text={title}>
          {title}
        </h1>
        
        <p class="blog-description">
          {description}
        </p>

        {tags.length > 0 && (
          <div class="blog-tags">
            {tags.map((tag) => (
              <span class="blog-tag">
                {tag}
              </span>
            ))}
          </div>
        )}

        {image && (
          <div class="blog-hero-image">
            <img
              src={image}
              alt={imageAlt || title}
            />
          </div>
        )}
      </div>
    </div>
    
    <article class="container mx-auto px-4 max-w-4xl py-12">

      <!-- Article Content -->
      <div class="blog-article">
        <slot />
      </div>

      <!-- Author Bio -->
      <div class="mt-16 pt-8 border-t border-border">
        <div class="flex items-start space-x-4">
          <img
            src="/xswarm.png"
            alt={author}
            class="w-16 h-16 rounded-full"
          />
          <div>
            <h3 class="font-semibold text-primary">{author}</h3>
            <p class="text-tertiary mt-1">
              Creator of XSwarm.ai, empowering developers to transform into a Team of One with AI-powered development coordination.
            </p>
            <div class="flex space-x-4 mt-3">
              <a
                href="https://github.com/chadananda"
                target="_blank"
                rel="noopener noreferrer"
                class="text-tertiary hover:text-link transition-colors"
              >
                GitHub
              </a>
              <a
                href="https://twitter.com/xswarmai"
                target="_blank"
                rel="noopener noreferrer"
                class="text-tertiary hover:text-link transition-colors"
              >
                Twitter
              </a>
            </div>
          </div>
        </div>
      </div>

      <!-- Share Section -->
      <div class="mt-12 p-6 bg-surface-hover rounded-xl">
        <h3 class="font-semibold text-primary mb-3">Share this article</h3>
        <div class="flex space-x-4">
          <a
            href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(Astro.url.href)}`}
            target="_blank"
            rel="noopener noreferrer"
            class="px-4 py-2 bg-[#1DA1F2] text-white rounded-lg hover:bg-[#1a8cd8] transition-colors"
          >
            Share on Twitter
          </a>
          <a
            href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}`}
            target="_blank"
            rel="noopener noreferrer"
            class="px-4 py-2 bg-[#0077B5] text-white rounded-lg hover:bg-[#006399] transition-colors"
          >
            Share on LinkedIn
          </a>
        </div>
      </div>
    </article>
  </main>
  
  <Footer />
</Layout>

<style>
  @import '../styles/blog-visuals.css';
  /* Prose customizations */
  .prose {
    --tw-prose-body: theme('colors.gray.700');
    --tw-prose-headings: theme('colors.gray.900');
    --tw-prose-links: theme('colors.blue.600');
    --tw-prose-bold: theme('colors.gray.900');
    --tw-prose-code: theme('colors.gray.900');
    --tw-prose-pre-bg: theme('colors.gray.100');
    --tw-prose-pre-code: theme('colors.gray.900');
  }
  
  .dark .prose {
    --tw-prose-body: theme('colors.gray.300');
    --tw-prose-headings: theme('colors.white');
    --tw-prose-links: theme('colors.blue.400');
    --tw-prose-bold: theme('colors.white');
    --tw-prose-code: theme('colors.gray.100');
    --tw-prose-pre-bg: theme('colors.gray.800');
    --tw-prose-pre-code: theme('colors.gray.100');
  }
  
  .prose :where(code):not(:where([class~="not-prose"] *)) {
    background-color: theme('colors.gray.100');
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-weight: 400;
  }
  
  .dark .prose :where(code):not(:where([class~="not-prose"] *)) {
    background-color: theme('colors.gray.800');
  }
  
  .prose :where(pre):not(:where([class~="not-prose"] *)) {
    background-color: theme('colors.gray.900');
    color: theme('colors.gray.100');
  }
  
  .dark .prose :where(pre):not(:where([class~="not-prose"] *)) {
    background-color: theme('colors.gray.950');
  }
</style>