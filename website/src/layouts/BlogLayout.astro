---
import Layout from './Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import readingTime from 'reading-time';
import '../styles/blog-typography.css';
import '../styles/blog-header.css';
import '../styles/blog-visuals.css';
import '../styles/blog-manifesto.css';
import '../styles/blog-scrollbar.css';
import '../styles/blog-share.css';
import '../styles/navbar-sticky.css';

export interface Props {
  title: string;
  description: string;
  publishDate: Date;
  author: string;
  image?: string;
  imageAlt?: string;
  tags?: string[];
  content: string;
}

const { title, description, publishDate, author, image, imageAlt, tags = [], content } = Astro.props;
const stats = readingTime(content);

const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(publishDate);
---

<Layout title={`${title} - XSwarm.ai Blog`} description={description}>
  <Navbar />
  
  <main>
    <!-- Hero Section -->
    <div class="blog-hero">
      <div class="container mx-auto px-4 max-w-4xl">
        <div class="blog-meta">
          <time class="blog-date" datetime={publishDate.toISOString()}>{formattedDate}</time>
          <span class="blog-author">{author}</span>
          <span class="blog-reading-time">{stats.text}</span>
        </div>
        
        <h1 class="blog-title" data-text={title}>
          {title}
        </h1>
        
        <p class="blog-description">
          {description}
        </p>

        {tags.length > 0 && (
          <div class="blog-tags">
            {tags.map((tag) => (
              <span class="blog-tag">
                {tag}
              </span>
            ))}
          </div>
        )}

        {image && (
          <div class="blog-hero-image">
            <img
              src={image}
              alt={imageAlt || title}
            />
          </div>
        )}
      </div>
    </div>
    
    <article class="container mx-auto px-4 max-w-4xl py-12">

      <!-- Article Content -->
      <div class="blog-article">
        <slot />
      </div>

      <!-- Author Bio -->
      <div class="mt-16 pt-8 border-t border-border">
        <div class="flex items-start space-x-4">
          <img
            src="/xswarm.png"
            alt={author}
            class="w-16 h-16 rounded-full"
          />
          <div>
            <h3 class="font-semibold text-primary">{author}</h3>
            <p class="text-tertiary mt-1">
              Creator of XSwarm.ai, empowering developers to transform into a Team of One with AI-powered development coordination.
            </p>
            <div class="flex space-x-4 mt-3">
              <a
                href="https://github.com/chadananda"
                target="_blank"
                rel="noopener noreferrer"
                class="text-tertiary hover:text-link transition-colors"
              >
                GitHub
              </a>
              <a
                href="https://twitter.com/xswarmai"
                target="_blank"
                rel="noopener noreferrer"
                class="text-tertiary hover:text-link transition-colors"
              >
                Twitter
              </a>
            </div>
          </div>
        </div>
      </div>

      <!-- Share Section -->
      <div class="cyberpunk-share-section">
        <div class="share-glitch-container">
          <h3 class="share-title" data-text="BROADCAST THIS SIGNAL">BROADCAST THIS SIGNAL</h3>
        </div>
        <div class="share-buttons-grid">
          <a
            href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(title)}&url=${encodeURIComponent(Astro.url.href)}`}
            target="_blank"
            rel="noopener noreferrer"
            class="share-button twitter-share"
          >
            <span class="share-icon">
              <svg viewBox="0 0 24 24" fill="currentColor" width="20" height="20">
                <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
              </svg>
            </span>
            <span class="share-label">X / Twitter</span>
            <span class="share-effect"></span>
          </a>
          <a
            href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}`}
            target="_blank"
            rel="noopener noreferrer"
            class="share-button linkedin-share"
          >
            <span class="share-icon">
              <svg viewBox="0 0 24 24" fill="currentColor" width="20" height="20">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </span>
            <span class="share-label">LinkedIn</span>
            <span class="share-effect"></span>
          </a>
          <button
            onclick="navigator.clipboard.writeText(window.location.href).then(() => { 
              this.classList.add('copied'); 
              setTimeout(() => this.classList.remove('copied'), 2000); 
            })"
            class="share-button copy-share"
          >
            <span class="share-icon">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" width="20" height="20">
                <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
              </svg>
            </span>
            <span class="share-label">Copy Link</span>
            <span class="share-effect"></span>
          </button>
        </div>
      </div>
    </article>
  </main>
  
  <Footer />
</Layout>

<style>
  @import '../styles/blog-visuals.css';
  /* Prose customizations */
  .prose {
    --tw-prose-body: theme('colors.gray.700');
    --tw-prose-headings: theme('colors.gray.900');
    --tw-prose-links: theme('colors.blue.600');
    --tw-prose-bold: theme('colors.gray.900');
    --tw-prose-code: theme('colors.gray.900');
    --tw-prose-pre-bg: theme('colors.gray.100');
    --tw-prose-pre-code: theme('colors.gray.900');
  }
  
  .dark .prose {
    --tw-prose-body: theme('colors.gray.300');
    --tw-prose-headings: theme('colors.white');
    --tw-prose-links: theme('colors.blue.400');
    --tw-prose-bold: theme('colors.white');
    --tw-prose-code: theme('colors.gray.100');
    --tw-prose-pre-bg: theme('colors.gray.800');
    --tw-prose-pre-code: theme('colors.gray.100');
  }
  
  .prose :where(code):not(:where([class~="not-prose"] *)) {
    background-color: theme('colors.gray.100');
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-weight: 400;
  }
  
  .dark .prose :where(code):not(:where([class~="not-prose"] *)) {
    background-color: theme('colors.gray.800');
  }
  
  .prose :where(pre):not(:where([class~="not-prose"] *)) {
    background-color: theme('colors.gray.900');
    color: theme('colors.gray.100');
  }
  
  .dark .prose :where(pre):not(:where([class~="not-prose"] *)) {
    background-color: theme('colors.gray.950');
  }
</style>